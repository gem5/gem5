# This workflow runs all of the Daily tests tests.

name: Daily Tests

on:
    # This is triggered weekly via the 'scheduler.yaml' workflow.
  workflow_dispatch:

jobs:

  get-date:
    runs-on: ubuntu-latest
    steps:
    - name: Get the current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV


  unittests:
    # This job builds both unittests.fast and unittests.debug unittests.
    strategy:
      matrix:
        type:
        - fast
        - debug
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/ubuntu-24.04_all-dependencies:latest
    timeout-minutes: 60
    needs: get-date
    steps:
    - uses: actions/checkout@v4
    - name: Cache build/ALL
      uses: actions/cache/restore@v4
      with:
        path: build/ALL
        key: testlib-build-all-${{ env.date }}
        restore-keys: testlib-build-all

    - name: ALL/unittests.${{ matrix.type }} UnitTests
      run: |
        scons --no-compress-debug \
        build/ALL/unittests.${{ matrix.type }} \
        -j $(nproc)

  testlib-long:
    # This job runs all the testlib long tests
    strategy:
      fail-fast: false
      matrix:
        test-type:
        - arm_boot_tests
        - fs
        - gpu
        - insttest_se
        - learning_gem5
        - m5threads_test_atomic
        - memory
        - replacement_policies
        - riscv_boot_tests
        - stdlib
        - x86_boot_tests
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/ubuntu-24.04_all-dependencies:latest
    timeout-minutes: 1440 # 24 hours for entire matrix to run
    needs: get-date
    steps:
    - name: Checkout
    - uses: actions/checkout@v4

    - name: Restore build/NULL cache
      uses: actions/cache@v4
      with:
        path: build/NULL
        key: testlib-build-null-${{ env.date }}

    - name: Restore build/ALL cache
      uses: actions/cache@v4
      with:
        path: build/ALL
        key: testlib-build-all-${{ env.date }}

      # Run the tests based on the subdirectory.
    - name: Run ${{ matrix.test-type }} testlib long tests
      id: run-tests
      working-directory: ${{ github.workspace }}/tests
      run: |
        ./main.py run gem5/${{ matrix.test-type }} --length=long -vvv -t $(nproc)

    - name: Upload Results
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: |
          daily-tests-run-${{ github.run_number }}-\
          testlib-long-${{ matrix.test-type }}}-\
          attempt-${{ github.run_attempt }}-\
          status-${{ steps.run-tests.outcome }}
        path: tests/testing-results

  gpu-tests:
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/gcn-gpu:latest
    timeout-minutes: 300

    steps:
    - uses: actions/checkout@v4
      with:
        ref: develop
    - name: Build VEGA_X86/gem5.opt
      run: scons build/VEGA_X86/gem5.opt -j`nproc`

    - name: Run Testlib GPU Tests
      working-directory: ${{ github.workspace }}/tests
      run: ./main.py run --length=long --skip-build -vvv -t $(nproc) --host gcn_gpu

    - name: Upload results
      if: success() || failure()
      uses: actions/upload-artifact@v4.0.0
      with:
        name: |
          gpu_COMMIT.${{github.sha}}_RUN.${{github.run_id}}_ATTEMPT.${{github.run_attempt}}
        path: tests/testing-results
        retention-days: 7



  sst-test:
    # This runs the SST-gem5 integration compilation and tests it with
    # ext/sst/sst/example.py.
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/sst-env:latest
    timeout-minutes: 180 # 3 hours

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build RISCV/libgem5_opt.so
      run: |
        scons build/RISCV/libgem5_opt.so --without-tcmalloc \
        --duplicate-sources --ignore-style -j $(nproc)

    - name: Makefile ext/sst
      working-directory: ${{ github.workspace }}/ext/sst
      run: mv Makefile.linux Makefile

    - name: Compile ext/sst
      working-directory: ${{ github.workspace }}/ext/sst
      run: make -j $(nproc)

    - name: Run SST test
      working-directory: ${{ github.workspace }}/ext/sst
      run: sst --add-lib-path=./ sst/example.py

  systemc-test:
    # This runs the gem5 within SystemC integration and runs a simple hello-world
    # hello-world simulation with it.
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/systemc-env:latest
    timeout-minutes: 180 # 3 hours

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build ARM/gem5.opt
      run: |
        scons build/ARM/gem5.opt --ignore-style --duplicate-sources -j$(nproc)

    - name: Disable SystemC
      run: |
        scons setconfig build/ARM --ignore-style USE_SYSTEMC=n

    - name: Build ARM/libgem5_opt.so
      run: |
        scons build/ARM/libgem5_opt.so --with-cxx-config --without-python \
        --without-tcmalloc -j$(nproc) --duplicate-sources

    - name: Compile gem5 within SystemC
      working-directory: |
        ${{ github.workspace }}/util/systemc/gem5_within_systemc
      run: make

    - name: Run gem5 within SystemC
      run: |
        ./build/ARM/gem5.opt configs/deprecated/example/se.py \
        -c tests/test-progs/hello/bin/arm/linux/hello

    - name: Continue gem5 within SystemC
      run: |
        LD_LIBRARY_PATH=build/ARM/:/opt/systemc/lib-linux64/ \
        ./util/systemc/gem5_within_systemc/gem5.opt.sc m5out/config.ini

  gpu-long-tests:
    # This job runs the GPU tests.
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/gcn-gpu:latest
    needs: get-date
    timeout-minutes: 720  # 12 hours

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache build/VEGA_X86
      uses: actions/cache@v4
      with:
        path: build/VEGA_X86
        key: testlib-build-vega-${{ env.date }}
        restore-keys: testlib-build-vega


    - name: Compile build/VEGA_X86/gem5.opt
      run: scons --no-compress-debug build/VEGA_X86/gem5.opt -j $(nproc)

    - name: Run Testlib GPU Tests
      working-directory: ${{ github.workspace }}/tests
      run: |
        ./main.py run --length=long -vvv --skip-build -t $(nproc) \
        --host gcn_gpu gem5/gpu

    - name: Upload Results
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: |
          daily-tests-run-${{ github.run_number }}-\
          gpu-tests-\
          attempt-${{ github.run_attempt }}-\
          status-${{ steps.run-tests.outcome }}
          path: tests/testing-results

  daily-tests:
    # The dummy job is used to indicate whether the daily tests have
    # passed or not. This can be used as status check for pull requests.
    # I.e., if we want to stop pull requests from being merged if the
    # daily tests are failing we can add this job as a required status
    # check.
    runs-on: ubuntu-latest
    needs:
    - unittests
    - testlib-long-tests
    - sst-test
    - systemc-test
    - gpu-long-tests

    steps:
    - run: echo "The Daily tests have passed."
