# This workflow runs all the Weekly tests.

name: Weekly Tests

on:
  # This is triggered weekly via the 'scheduler.yaml' workflow.
  workflow_dispatch:

jobs:

  get-date:
    runs-on: ubuntu-latest
    steps:
    - name: Get the current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

  testlib-v-long:
    strategy:
      fail-fast: false
      matrix:
        test-type:
        - gem5_library_example_tests
        - gem5_resources
        - stdlib
        - parsec_benchmarks
        - x86_boot_tests
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/ubuntu-24.04_all-dependencies:latest
    timeout-minutes: 4320  # 3 days
    needs: get-date
    steps:
    - uses: actions/checkout@v4

    - name: Cache build/ALL
      uses: actions/cache@v4
      with:
        path: build/ALL
        key: testlib-build-all-${{ env.date }}
        restore-keys: |
          testlib-build-all

    - name: Run ${{ matrix.test-type }} testlib very-long tests
      working-directory: ${{ github.workspace }}/tests
      id: run-tests
      run: |
        ./main.py run gem5/${{ matrix.test-type }} --length very-long \
        -j$(nproc) -vv

    - name: Upload Results
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: |
          weekly-tests-run-${{ github.run_number }}-\
          g${{ matrix.test-type }}-\
          attempt-${{ github.run_attempt }}-\
          status-${{ steps.run-tests.outcome }}
        path: tests/testing-results

  gpu-v-long-tests:
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/gcn-gpu:latest
    timeout-minutes: 4320 # 3 days
    needs: get-date

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache build/VEGA_X86
      uses: actions/cache@v4
      with:
        path: build/VEGA_X86
        key: testlib-build-vega-${{ env.date }}
        restore-keys: |
          testlib-build-vega

    - name: Run Testlib very-long GPU Tests
      working-directory: ${{ github.workspace }}/tests
      id: run-tests
      run: |
        ./main.py run --length=very-long -vvv -t $(nproc) \
        --host gcn_gpu  gem5/gpu

    - name: Upload Results
      if: success() || failure()
      uses: actions/upload-artifact@v4.0.0
      with:
        name: |
          weekly-tests-run-${{ github.run_number }}-\
          gpu-tests-\
          attempt-${{ github.run_attempt }}-\
          status-${{ steps.run-tests.outcome }}
        path: tests/testing-results

  dramsys-tests:
    runs-on: [self-hosted, linux, x64]
    container: ghcr.io/gem5/ubuntu-24.04_all-dependencies:latest
    timeout-minutes: 4320 # 3 days
    steps:
    - uses: actions/checkout@v4
    - name: Checkout DRAMSys
      working-directory: ${{ github.workspace }}/ext/dramsys
      run: |
        git clone https://github.com/tukl-msd/DRAMSys \
          --branch v5.0 --depth 1 DRAMSys

    - name: Build gem5
      working-directory: ${{ github.workspace }}
      run: scons build/ALL/gem5.opt -j $(nproc)

    - name: DRAMSys Check (arm-hello-dramsys)
      run: |
        ./build/ALL/gem5.opt \
        configs/example/gem5_library/dramsys/arm-hello-dramsys.py

    - name: DRAMSys Check (dramsys-traffic)
      run: |
        ./build/ALL/gem5.opt \
        configs/example/gem5_library/dramsys/dramsys-traffic.py

    - name: DRAMSys Check (example/dramsys)
      run: /build/ALL/gem5.opt configs/example/dramsys.py

  weekly-tests:
    # The dummy job is used to indicate whether the weekly tests have
    # passed or not. This can be used as status check for pull requests.
    # I.e., if we want to stop pull requests from being merged if the
    # weekly tests are failing we can add this job as a required status
    # check.
    runs-on: ubuntu-latest
    needs:
    - testlib-v-long
    - dramsys-tests
    - gpu-v-long-tests
    steps:
    - run: echo "The Weekly tests have passed."
